<?php 

/**
*документация
Сайт, где будут находиться html документы будет разбит на папки. Основная папка это название сайта, чтобы название было такое же как и в адресной строке. Содержание папки: файлы с кодом который будет на всех страницах одинаковый, такой как меню и подвал сайта. В папке сайта также содержатся паки с названием страниц, где будут находиться файлы с содержанием html кода для отображения разных страниц сайта. В файлах будут массивы с именами используемых тегов $p - для параграфов
* public переменные получают данные извне. Запуск класса идет через 4 параметра, переменные пути, значения замены и запуск метода
* $searh - переменная, слова для замены на соответствующие словам значения. Эти слова будут объявлены в html документе в виде переменных, они будут замененены тегами и конструкциями, которые будут записаны в другие переменные.
*/
class CreateView
{
	
	public $arr_view;// в эту переменную будет передаваться массив данных для построения страницы

	private $shablon_html;// в эту переменную записывается html шаблон в виде текстовой строки
	private $searh = [];// в этоу переменную будут пердаваться значения которые будут заменены значениями из $raplace
	private $replace =[]; // в эту переменную будут передаваться значения, на которые будут заменены  значения $searh в строке переданное по пути $a. Эта переменная будет массивом
	private $data =[];

	public function func_1(){	

		// создаем текстовую строку хтмл файла для результатирующей страницы отображения		

		$html_code = str_replace($this->searh, $this->replace, $this->shablon_html);
		return $html_code;
	}

	
	// массив будет поступать в переменную $a, это временное имя переменной
	public function func_2(){
		
		// 

		
		
		// $this->shablon_html = file_get_contents(DIR.$path.'index.php');

		// массив из файлов html страницы, которые вставляются в шаблон
		//  сначала производится разборка html страницы, добавление уровня блоков на странице, прогрузка страницы и ее оформление. Добавление на страницу хтмл кода, в соответствии с запросом и полученным массивом
		if (is_array($this->arr_view['$content'])) {
			$this->data = $this->arr_view['$content'];
			var_dump($this->data);
			$this->func_3();
		}else{
			$this->shablon_html = file_get_contents(DIR.$this->arr_view['$content']);
			var_dump($this->data);
		}

		// наполнение сеарх и репласе данными значения страницы из полученного массива. массив составляет из данных, полученых от администратора или редактора сайта и сохраненных в базе данных

		foreach ($this->arr_view['tags'] as $key => $value) {
			# code... разбираем массив тегов, чтобы не прописывать название каждого тега, где ключ - название тега
			# а значение - массив содержимого тега
			$this->data = $value;
			$this->func_3($key);

		}

		// $this->data = $this->arr_view['tags'];
		// $this->func_3();
		// 
		
		// здесь будет записан шаблон для поиcка путей к стилям и скриптам. В видах будет метка $DIR/ для замены
		// все пути к подключаемым стилям прописываются в индексе
		
		// $this->searh = '$DIR/';
		// $this->replace = DIR.$path;
		// $this->shablon_html = $this->func_1();
		// 
		// var_dump($this->shablon_html);
		return $this->shablon_html;
	}

	// функция разбора массива, вынесенная из 2-й функции
	// ключем является метка для замены, value - само значение, на которое меняется
	private function func_3($num){
		foreach ($this->data as $key => $value) {
			# code...
			var_dump($num);
			array_push($this->searh, $num.$key);
			if (file_exists(DIR.$value)) {
				$value = file_get_contents(DIR.$value);
			};			
			array_push($this->replace, $value);
		}
		$this->shablon_html = $this->func_1();
	}
	private function SlectHtml(){
		
	}
}
 ?>